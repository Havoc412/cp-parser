行号	类型		值
-------------------------------------
1	KEYWORD_INT	int
1	IDENTIFIER	main
1	DELIMITER_OPEN_PARENTHESIS	(
1	DELIMITER_CLOSE_PARENTHESIS	)
1	DELIMITER_BEGIN_BRACE	{
1	KEYWORD_INT	int
2	IDENTIFIER	a
2	OPERATOR_ASSIGN	=
2	CONSTANT_INTEGER	10
2	DELIMITER_SEMICOLON	;
2	KEYWORD_INT	int
3	IDENTIFIER	b
3	OPERATOR_ASSIGN	=
3	CONSTANT_INTEGER	-20
3	DELIMITER_SEMICOLON	;
6	KEYWORD_IF	if
6	DELIMITER_OPEN_PARENTHESIS	(
6	IDENTIFIER	a
6	OPERATOR_LESS_THAN	<
6	IDENTIFIER	b
6	DELIMITER_CLOSE_PARENTHESIS	)
6	DELIMITER_BEGIN_BRACE	{
6	IDENTIFIER	a
7	OPERATOR_ASSIGN	=
7	IDENTIFIER	a
7	OPERATOR_PLUS	+
7	CONSTANT_INTEGER	1
7	DELIMITER_SEMICOLON	;
7	IDENTIFIER	b
8	OPERATOR_ASSIGN	=
8	IDENTIFIER	b
8	OPERATOR_PLUS	+
8	CONSTANT_INTEGER	1
8	DELIMITER_SEMICOLON	;
8	IDENTIFIER	b
9	OPERATOR_ASSIGN	=
9	IDENTIFIER	b
9	OPERATOR_PLUS	+
9	CONSTANT_INTEGER	1
9	DELIMITER_SEMICOLON	;
9	DELIMITER_END_BRACE	}
10	KEYWORD_ELSE	else
10	DELIMITER_BEGIN_BRACE	{
10	IDENTIFIER	b
11	OPERATOR_ASSIGN	=
11	IDENTIFIER	b
11	OPERATOR_MINUS	-
11	CONSTANT_INTEGER	1
11	DELIMITER_SEMICOLON	;
11	DELIMITER_END_BRACE	}
15	KEYWORD_IF	if
15	DELIMITER_OPEN_PARENTHESIS	(
15	IDENTIFIER	a
15	OPERATOR_EQUAL	==
15	IDENTIFIER	b
15	DELIMITER_CLOSE_PARENTHESIS	)
15	KEYWORD_THEN	then
15	DELIMITER_BEGIN_BRACE	{
15	IDENTIFIER	a
16	OPERATOR_ASSIGN	=
16	IDENTIFIER	a
16	OPERATOR_MULTIPLY	*
16	CONSTANT_INTEGER	2
16	DELIMITER_SEMICOLON	;
16	DELIMITER_END_BRACE	}
20	KEYWORD_IF	if
20	DELIMITER_OPEN_PARENTHESIS	(
20	IDENTIFIER	a
20	OPERATOR_AND	&&
20	IDENTIFIER	b
20	DELIMITER_CLOSE_PARENTHESIS	)
20	KEYWORD_THEN	then
20	DELIMITER_BEGIN_BRACE	{
20	IDENTIFIER	a
21	OPERATOR_ASSIGN	=
21	IDENTIFIER	a
21	OPERATOR_BITOR	|
21	IDENTIFIER	b
21	DELIMITER_SEMICOLON	;
21	DELIMITER_END_BRACE	}
22	KEYWORD_ELSE	else
22	DELIMITER_BEGIN_BRACE	{
22	IDENTIFIER	b
23	OPERATOR_ASSIGN	=
23	IDENTIFIER	b
23	OPERATOR_PLUS	+
23	CONSTANT_INTEGER	1
23	DELIMITER_SEMICOLON	;
23	DELIMITER_END_BRACE	}
24	KEYWORD_RETURN	return
27	CONSTANT_INTEGER	0
27	DELIMITER_SEMICOLON	;
27	DELIMITER_END_BRACE	}
28	END_OF_FILE	EOF
